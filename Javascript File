// Function to download every prediction by clicking three dots and then the "Download" button
// Yash Bhargava Oct 1 2024
//README: For optimal usage zoom out on the alphafold3 site so that all the predictions intended for download are visible on the screen
//Run in browser console
//The delay can be adjusted depending on the internet and machine speed. If you notice that you aren't getting all 100 downloads then you will need to increase the delay so that the website can keep up. You also don't need to adjust this code depending on how much you are downloading at at time. It will simply try and download as many as it can from the current page.
function downloadPredictions() {
    // Select all the rows in the table containing predictions
    const rows = document.querySelectorAll('tr.mat-mdc-row');

    // Check if any rows were found
    if (rows.length === 0) {
        console.log("No rows found.");
        return;
    }

    // Function to click on the three dots and then the corresponding "Download" button with a delay
    const clickDotsAndDownload = (row, index, delay) => {
        setTimeout(() => {
            // Find the three dots button within the row
            const threeDotsButton = row.querySelector('button.mat-mdc-menu-trigger');

            if (!threeDotsButton) {
                console.log(`Three dots button not found for prediction ${index + 1}.`);
                return;
            }

            // Simulate clicking the three dots to open the menu
            console.log(`Clicking three dots button for prediction ${index + 1}...`);
            threeDotsButton.click();

            // Wait for the menu to open and search for the download button anywhere in the document
            setTimeout(() => {
                // Now we find the download button in the entire document
                const downloadButtons = document.querySelectorAll("span.mat-mdc-menu-item-text");
                
                // Find the download button by checking its text content
                const downloadButton = [...downloadButtons].find(el => el.textContent.trim() === "Download");

                // Check if the download button exists and click it
                if (downloadButton) {
                    console.log(`Clicking Download button for prediction ${index + 1}...`);
                    downloadButton.click();
                } else {
                    console.log(`Download button not found for prediction ${index + 1}.`);
                }
            },500); // 0.5 second delay to ensure the menu opens
        }, delay);
    };

    // Iterate over each row and trigger the download with a delay between each action
    rows.forEach((row, index) => {
        clickDotsAndDownload(row, index, index * 500); // Adjust delay between each button, 0.5 seconds
    });
}

// Run the function
downloadPredictions();
